---
module: dcnm_policy
short_description: DCNM Ansible Module for managing policies.
version_added: "1.1.0"
description:
    - DCNM Ansible Module for Creating, Deleting, Querying and Modifying policies
author: Mallik Mudigonda(@mmudigon)
options:
  fabric:
    description:
    - Name of the target fabric for policy operations
    type: str
    required: true

  state:
    description:
    - The required state of the configuration after module completion.
    type: str
    required: false
    choices:
      - merged
      - deleted
      - query
    default: merged

  use_desc_as_key:
    description:
    - Flag to enforce using the description parameter as the unique key for policy management.
    - When set to True, the description parameter must be unique and non-empty for each policy in the playbook.
      The module will also use the description to find the policy to modify or delete.
      If exsiting policies have the same description, the module will raise an error.
      If the existing policy with the matching description is using differnet template name, the module will delete the existing policy and create a new one.
    type: bool
    required: false
    default: false

  deploy:
    description:
    - A flag specifying if a policy is to be deployed on the switches
    type: bool
    required: false
    default: true

  config:
    description:
    - A list of dictionaries containing policy and switch information
    type: list
    elements: dict
    suboptions:
      name:
        description:
        - This can be one of the following
          a) Template Name - A unique name identifying the template. Please note that a template name can be used by
             multiple policies and hence a template name does not identify a policy uniquely.
          b) Policy ID     - A unique ID identifying a policy. Policy ID MUST be used for modifying policies since
             template names cannot uniquely identify a policy
        type: str
        required: true

      description:
        description:
        - Description of the policy. The description may include the details regarding the policy i.e. the arguments if
          any etc.
        type: str
        required: false
        default: ''

      priority:
        description:
        - Priority associated with the policy
        type: str
        required: false
        default: '500'

      create_additional_policy:
        description:
        - A flag indicating if a policy is to be created even if an identical policy already exists
        type: bool
        required: false
        default: true

      policy_vars:
        description:
        - A set of arguments required for creating and deploying policies. The arguments are specific to each policy and depends
          on the tmeplate that is used by the policy.
        type: dict
        required: false
        default: {}

      switch:
        description:
        - A dictionary of switches and associated policy information. All switches in this list will be deployed with only those policies
          that are included under "policies" object i.e. 'policies' object will override the list of policies for this particular switch.
          If 'policies' object is not included, then other policies specified in the configurstion will be deployed to these switches.
        type: list
        elements: dict
        suboptions:
          ip:
            description:
            - IP address of the switch where the policy is to be deployed. This can be IPV4 address, IPV6 address or hostname
            type: str
            required: true

          policies:
            description:
            - A list of policies to be deployed on the switch. Note only policies included here will be deployed on the switch irrespective of
              other polcies included in the configuration.
            type: list
            elements: dict
            required: false
            default: []
            suboptions:
              name:
                description:
                - This can be one of the following
                  a) Template Name - A unique name identifying the template. Please note that a template name can be used by
                     multiple policies and hence a template name does not identify a policy uniquely.
                  b) Policy ID     - A unique ID identifying a policy. Policy ID MUST be used for modifying policies since
                     template names cannot uniquely identify a policy
                type: str
                required: true

              description:
                description:
                - Description of the policy. The description may include the details regarding the policy
                type: str
                required: false
                default: ''

              priority:
                description:
                - Priority associated with the policy
                type: str
                required: false
                default: '500'

              create_additional_policy:
                description:
                - A flag indicating if a policy is to be created even if an identical policy already exists
                type: bool
                required: false
                default: true

              policy_vars:
                description:
                - A set of arguments required for creating and deploying policies. The arguments are specific to each policy and that depends
                  on the tmeplate that is used by the policy.
                type: dict
                required: false
                default: {}
